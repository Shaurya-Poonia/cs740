%% Write your observations with c=0 and 0.15 for sink, multi-component, tree and wiki programs here

a)
-----------------------------------------------------------------------------------
Is the method explained in the class correct, or the web versions correct, or both?
------------------------------------------------------------------------------------

web version: M  = (1-c)A + c*B
class version: M  =  A + c*B

if we increase the value of c, the web version will decrease internal components effect on 
calculating the page rank and external component effect will increase.
But in clas version, there will be no change in internal component effect. Only external component 
effect will be increased.

if we decrase the value of c, the web version will increase internal components effect on 
calculating the page rank and external component effect will decrease.
But in clas version, there will be no change in internal component effect. Only external component 
effect will be decreased.

eigen value corresponding to rank vector web version: 1
eigen value corresponding to rank vector class version: 1+c

Both methods are correct. 

web version: when c -> 1, internal effect(A) is vanished 
class version: when c -> Inf, internal effect(A) is negligible as compared to c*B(external component). 


---------------------------------------------------------------------------
b
---------------------------------------------------------------------------
sink (c = 0)
---------------------------------------------------------------------------------------------------
output:
Top 20(n) pages:
    ID  RANK
   3   1
   2   2
   1   3

In here c = 0 will  give correct solution.
because we have removed dangling node problem by adding a vector of values 1/n in place of 0 vector
corresponding to sink node.
Now every column of C has column sum equal to 1.
rank vector will be vector corresponding to eigen value 1+0

----------------------------------------------------------------------------------------------------
sink (c = 0.15)
---------------------------------------------------------------------------------------------------
Output:
 Top 20(n) pages:
   ID  RANK
   3   1
   2   2
   1   3
In here c = 0.15 will also give correct solution.
because we have removed dangling node problem by adding a vector of values 1/n in place of 0 vector
corresponding to sink node.
Now every column of C has column sum equal to 1.15.
rank vector will be vector corresponding to eigen value 1+0.15
----------------------------------------------------------------------------------------------------
Value of C has not changed the output
****************************************************************************************************

multi-component (c = 0)
---------------------------------------------------------------------------------------------------
Top 20(n) pages: 
    ID  RANK    or  ID RANK
   5   1             1  1
   3   1             2  2
   4   1             3  3
   1   4             4  3
   2   4             5  3  
   
In here C = 0 give multiple rank vectors.
There will be multiple eigen vectors corresponding to eigen value 1.
Each of eigen vector(rank vector) will correspond to a particular component.
Since there is no interaction among different components, we can't compare their rank by taking 
c = 0.
----------------------------------------------------------------------------------------------------


multi-component (c = 0.15)
---------------------------------------------------------------------------------------------------
output:
Top 20(n) pages:
    ID  RANK
   3   1
   4   1
   5   1
   1   1
   2   1
   
In here C = 0.15 will solve the problem faced with c = 0 and we will get only one rank vector.
There will be single eigen vectors corresponding to eigen value 1.15.
By adding C/N*I(where I is a matrix of size NxN with each element 1 and N is number of nodes),
we have introduced new link between nodes which makes sure that there is dependence between 
components.
Since there is  interaction among different components, we can compare their rank by taking 
c = 0.15.
Here rank for every node is same. 
----------------------------------------------------------------------------------------------------
c = 0 will give ambiguous result.
****************************************************************************************************


tree (c = 0)
---------------------------------------------------------------------------------------------------
Output:
Top 20(n) pages:
    ID  RANK
   1   1
   3   2
   2   3
   4   4
   5   4
   6   4
   7   4
   8   4
In here C = 0 will  give correct solution.
because we have removed dangling node problem by adding a vector of values 1/n in place of 0 vector
corresponding to sink node.
Now every column of C has column sum equal to 1.
rank vector will be vector corresponding to eigen value 1+0

----------------------------------------------------------------------------------------------------

tree (c = 0.15)
---------------------------------------------------------------------------------------------------
Output:
Top 20(n) pages:
    ID  RANK
   1   1
   3   2
   2   3
   4   4
   5   4
   6   4
   7   4
   8   4
In here C = 0.15 will also give correct solution.
because we have removed dangling node problem by adding a vector of values 1/n in place of 0 vector
corresponding to sink node.
Now every column of C has column sum equal to 1.15.
rank vector will be vector corresponding to eigen value 1+0.15
----------------------------------------------------------------------------------------------------
c = 0 and C = 0.15 solution may be different for another tree.
****************************************************************************************************


wiki (c = 0)
----------------------------------------------------------------------------------------------------

 possible rankings:
Top 20(n) pages:
    ID  RANK
   732     1
   731     1
   300     3
   301     3
   110     5
   109     5
     6     7
   415     7
   465     7
   909     7
   361     7
   334     7
     2     7
   611     7
   820     7
   190     7
   629     7
   837     7
   862     7
    22     7
 possible rankings:
Top 20(n) pages:
    ID  RANK
   732     1
   731     1
   110     3
   109     3
    64     5
   346     5
    46     5
   928     5
    91     5
   124     5
   944     5
   779     5
   663     5
   397     5
   105     5
   156     5
   181     5
    97     5
   415     5
   465     5
 possible rankings:
Top 20(n) pages:
    ID  RANK
   300     1
   301     1
   109     3
   110     3
   732     5
   731     5
   962     7
   424     7
   711     7
   884     7
   256     7
   290     7
   506     7
    83     7
   877     7
    61     7
   332     7
   458     7
   646     7
   689     7

Since there are multiple solution for page rank. There are multiple components in this graph.
c=0 gives ambiguous solution to page rank.  
----------------------------------------------------------------------------------------------------


wiki (c = 0.15)
----------------------------------------------------------------------------------------------------


 possible rankings:
Top 20(n) pages:
    ID  RANK
   729     1
   731     2
   966     3
   604     4
   273     5
   891     6
   434     7
   301     8
   132     9
   730    10
   635    11
   780    12
   271    13
   901    14
   304    15
   165    16
    23    17
   258    18
    38    19
   947    20

c=0.15 will give single page rank. We have explained the reason multiple component part.
-----------------------------------------------------------------------------------------------------
page rank will change if we change the value of c 
  A high value of c  means that the relative PageRank will be determined by
  PageRank received from other component - rather than the internal link of the component.
  

